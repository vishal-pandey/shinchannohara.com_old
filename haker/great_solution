

    #include &lt;bits/stdc++.h&gt;
    #include &lt;ext/pb_ds/assoc_container.hpp&gt;
    #include &lt;ext/pb_ds/tree_policy.hpp&gt;
    using namespace __gnu_pbds;
    using namespace std;
    #define Foreach(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
    #define For(i,a,b) for(int (i)=(a);(i) &lt; (b); ++(i))
    #define rof(i,a,b) for(int (i)=(a);(i) &gt; (b); --(i))
    #define rep(i, c) for(auto &amp;(i) : (c))
    #define x first
    #define y second
    #define pb push_back
    #define PB pop_back()
    #define iOS ios_base::sync_with_stdio(false)
    #define sqr(a) (((a) * (a)))
    #define all(a) a.begin() , a.end()
    #define error(x) cerr &lt;&lt; #x &lt;&lt; &quot; = &quot; &lt;&lt; (x) &lt;&lt;endl
    #define Error(a,b) cerr&lt;&lt;&quot;( &quot;&lt;&lt;#a&lt;&lt;&quot; , &quot;&lt;&lt;#b&lt;&lt;&quot; ) = ( &quot;&lt;&lt;(a)&lt;&lt;&quot; , &quot;&lt;&lt;(b)&lt;&lt;&quot; )n&quot;;
    #define errop(a) cerr&lt;&lt;#a&lt;&lt;&quot; = ( &quot;&lt;&lt;((a).x)&lt;&lt;&quot; , &quot;&lt;&lt;((a).y)&lt;&lt;&quot; )n&quot;;
    #define coud(a,b) cout&lt;&lt;fixed &lt;&lt; setprecision((b)) &lt;&lt; (a)
    #define L(x) ((x)&lt;&lt;1)
    #define R(x) (((x)&lt;&lt;1)+1)
    #define umap unordered_map
    #define double long double
    typedef long long ll;
    typedef pair&lt;int,int&gt;pii;
    typedef vector&lt;int&gt; vi;
    typedef complex&lt;double&gt; point;
    template &lt;typename T&gt; using os =  tree&lt;T, null_type, less&lt;T&gt;, rb_tree_tag, tree_order_statistics_node_update&gt;;
    template &lt;class T&gt;  inline void smax(T &amp;x,T y){ x = max((x), (y));}
    template &lt;class T&gt;  inline void smin(T &amp;x,T y){ x = min((x), (y));}
    ll x[3];
    int main(){
    	iOS;
    	int n, a;
    	cin &gt;&gt; n;
    	For(i,0,n){
    		cin &gt;&gt; a;
    		x[i % 3] += (ll)a;
    	}
    	For(i,0,3)
    		cout &lt;&lt; x[i] &lt;&lt; ' ';
    	cout &lt;&lt; endl;
    	return 0;
    }

